<?php
ob_start();
?>

<div class="min-h-screen bg-background">
    <!-- –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ -->
    <div class="bg-card border-b border-border">
        <div class="container mx-auto px-4 py-4">
            <nav class="flex items-center space-x-2 text-sm">
                <a href="/" class="text-muted-foreground hover:text-primary transition-colors">–ì–ª–∞–≤–Ω–∞—è</a>
                <span class="text-muted-foreground">‚Ä¢</span>
                <a href="/my-products" class="text-muted-foreground hover:text-primary transition-colors">–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã</a>
                <span class="text-muted-foreground">‚Ä¢</span>
                <span class="text-foreground font-medium">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</span>
            </nav>
        </div>
    </div>

    <div class="container mx-auto px-4 py-8">
        <div class="max-w-4xl mx-auto">
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold mb-2">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</h1>
                <p class="text-muted-foreground">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Ç–æ–≤–∞—Ä–µ –∏–ª–∏ —É—Å–ª—É–≥–µ</p>
            </div>

            <form id="create-product-form" class="space-y-8" enctype="multipart/form-data">
                <input type="hidden" name="csrf_token" value="<?= $csrf_token ?>">

                <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-info mr-2"></i>
                        –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- –¢–∏–ø —Ç–æ–≤–∞—Ä–∞ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">
                                –¢–∏–ø —Ç–æ–≤–∞—Ä–∞ <span class="text-red-500">*</span>
                            </label>
                            <select name="type" class="input-field" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                                <?php foreach ($productTypes as $key => $label): ?>
                                    <option value="<?= htmlspecialchars($key) ?>">
                                        <?= htmlspecialchars($label) ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                            <div class="error-message" data-field="type"></div>
                        </div>

                        <!-- –ò–≥—Ä–∞ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">
                                –ò–≥—Ä–∞ <span class="text-red-500">*</span>
                            </label>
                            <select name="game" class="input-field" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É</option>
                                <?php foreach ($games as $key => $label): ?>
                                    <option value="<?= htmlspecialchars($key) ?>">
                                        <?= htmlspecialchars($label) ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                            <div class="error-message" data-field="game"></div>
                        </div>
                    </div>

                    <!-- –ù–∞–∑–≤–∞–Ω–∏–µ -->
                    <div class="space-y-2 mt-6">
                        <label class="block text-sm font-medium">
                            –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <span class="text-red-500">*</span>
                        </label>
                        <input 
                            type="text" 
                            name="title" 
                            class="input-field" 
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
                            maxlength="255"
                            required
                        >
                        <div class="text-xs text-muted-foreground">–ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤</div>
                        <div class="error-message" data-field="title"></div>
                    </div>

                    <!-- –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ -->
                    <div class="space-y-2 mt-6">
                        <label class="block text-sm font-medium">
                            –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                        </label>
                        <textarea 
                            name="short_description" 
                            class="input-field resize-none" 
                            rows="3"
                            placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ)"
                            maxlength="200"
                        ></textarea>
                        <div class="text-xs text-muted-foreground">–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</div>
                    </div>

                    <!-- –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ -->
                    <div class="space-y-2 mt-6">
                        <label class="block text-sm font-medium">
                            –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ <span class="text-red-500">*</span>
                        </label>
                        <textarea 
                            name="description" 
                            class="input-field resize-none" 
                            rows="6"
                            placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, —á—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç..."
                            required
                        ></textarea>
                        <div class="text-xs text-muted-foreground">–ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤</div>
                        <div class="error-message" data-field="description"></div>
                    </div>
                </div>

                <!-- –¶–µ–Ω–∞ –∏ –≤–∞–ª—é—Ç–∞ -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-dollar-sign mr-2"></i>
                        –°—Ç–æ–∏–º–æ—Å—Ç—å
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <!-- –¶–µ–Ω–∞ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">
                                –¶–µ–Ω–∞ <span class="text-red-500">*</span>
                            </label>
                            <input 
                                type="number" 
                                name="price" 
                                class="input-field" 
                                placeholder="0"
                                min="1"
                                max="1000000"
                                step="1"
                                required
                            >
                            <div class="error-message" data-field="price"></div>
                        </div>

                        <!-- –í–∞–ª—é—Ç–∞ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">–í–∞–ª—é—Ç–∞</label>
                            <select name="currency" class="input-field">
                                <?php foreach ($currencies as $code => $currency): ?>
                                    <option value="<?= htmlspecialchars($code) ?>" <?= $code === 'RUB' ? 'selected' : '' ?>>
                                        <?= htmlspecialchars($currency['symbol'] . ' ' . $currency['name']) ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        </div>

                        <!-- –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (–¥–ª—è —Å–∫–∏–¥–∫–∏) -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                            <input 
                                type="number" 
                                name="original_price" 
                                class="input-field" 
                                placeholder="–î–ª—è –ø–æ–∫–∞–∑–∞ —Å–∫–∏–¥–∫–∏"
                                min="1"
                                max="1000000"
                                step="1"
                            >
                        </div>
                    </div>
                </div>

                <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-image mr-2"></i>
                        –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    </h3>
                    
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">
                                –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            </label>
                            <div 
                                id="image-drop-zone" 
                                class="border-2 border-dashed border-border rounded-lg p-8 text-center hover:border-primary transition-colors cursor-pointer"
                            >
                                <div class="space-y-4">
                                    <div class="text-4xl">üì∑</div>
                                    <div>
                                        <p class="text-lg font-medium">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞</p>
                                        <p class="text-sm text-muted-foreground">–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤</p>
                                    </div>
                                    <div class="text-xs text-muted-foreground">
                                        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, WebP. –ú–∞–∫—Å–∏–º—É–º 5 —Ñ–∞–π–ª–æ–≤ –ø–æ 5MB
                                    </div>
                                </div>
                                <input 
                                    type="file" 
                                    name="images[]" 
                                    id="images-input"
                                    class="hidden" 
                                    multiple 
                                    accept="image/*"
                                >
                            </div>
                        </div>

                        <!-- –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                        <div id="images-preview" class="grid grid-cols-2 md:grid-cols-4 gap-4 hidden"></div>
                    </div>
                </div>

                <!-- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-list mr-2"></i>
                        –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                    </h3>
                    
                    <div class="space-y-4">
                        <div class="text-sm text-muted-foreground mb-4">
                            –î–æ–±–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞ (—É—Ä–æ–≤–µ–Ω—å, —Ä–∞–Ω–≥, –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —Ç.–¥.)
                        </div>
                        
                        <div id="specifications-container">
                            <div class="specification-row flex gap-4 mb-4">
                                <input 
                                    type="text" 
                                    name="spec_keys[]" 
                                    class="input-field flex-1" 
                                    placeholder="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –£—Ä–æ–≤–µ–Ω—å)"
                                >
                                <input 
                                    type="text" 
                                    name="spec_values[]" 
                                    class="input-field flex-1" 
                                    placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 50)"
                                >
                                <button type="button" class="btn-outline remove-spec hidden">
                                    <i class="icon-trash"></i>
                                </button>
                            </div>
                        </div>
                        
                        <button type="button" id="add-specification" class="btn-secondary">
                            <i class="icon-plus mr-2"></i>
                            –î–æ–±–∞–≤–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É
                        </button>
                    </div>
                </div>

                <!-- –î–æ—Å—Ç–∞–≤–∫–∞ -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-truck mr-2"></i>
                        –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
                    </h3>
                    
                    <div class="space-y-6">
                        <!-- –û–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-4">
                                <div class="flex items-center space-x-3">
                                    <input 
                                        type="checkbox" 
                                        name="instant_delivery" 
                                        id="instant_delivery"
                                        class="checkbox"
                                    >
                                    <label for="instant_delivery" class="text-sm font-medium">
                                        –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
                                    </label>
                                </div>
                                
                                <div class="flex items-center space-x-3">
                                    <input 
                                        type="checkbox" 
                                        name="auto_delivery" 
                                        id="auto_delivery"
                                        class="checkbox"
                                    >
                                    <label for="auto_delivery" class="text-sm font-medium">
                                        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
                                    </label>
                                </div>
                            </div>
                            
                            <div class="space-y-2">
                                <label class="block text-sm font-medium">–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                                <input 
                                    type="text" 
                                    name="delivery_time" 
                                    class="input-field" 
                                    placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ 24 —á–∞—Å–æ–≤"
                                >
                            </div>
                        </div>

                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ</label>
                            <textarea 
                                name="delivery_info" 
                                class="input-field resize-none" 
                                rows="3"
                                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏..."
                            ></textarea>
                        </div>

                        <!-- –ì–∞—Ä–∞–Ω—Ç–∏–∏ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">–ì–∞—Ä–∞–Ω—Ç–∏—è (–¥–Ω–∏)</label>
                            <input 
                                type="number" 
                                name="warranty_days" 
                                class="input-field" 
                                placeholder="0"
                                min="0"
                                max="365"
                            >
                            <div class="text-xs text-muted-foreground">0 = –±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–∏</div>
                        </div>

                        <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–ª–∏—á–∏–∏ -->
                        <div class="space-y-2">
                            <label class="block text-sm font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–ª–∏—á–∏–∏</label>
                            <input 
                                type="number" 
                                name="stock_quantity" 
                                class="input-field" 
                                placeholder="1"
                                min="1"
                                max="999"
                                value="1"
                            >
                        </div>
                    </div>
                </div>

                <!-- –¢–µ–≥–∏ -->
                <div class="card p-6">
                    <h3 class="text-xl font-semibold mb-6 flex items-center">
                        <i class="icon-tag mr-2"></i>
                        –¢–µ–≥–∏
                    </h3>
                    
                    <div class="space-y-2">
                        <label class="block text-sm font-medium">–¢–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞</label>
                        <input 
                            type="text" 
                            name="tags" 
                            class="input-field" 
                            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: —Ç–æ–ø, –¥–µ—à–µ–≤–æ, –±—ã—Å—Ç—Ä–æ"
                        >
                        <div class="text-xs text-muted-foreground">
                            –¢–µ–≥–∏ –ø–æ–º–æ–≥—É—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ –≤–∞—à —Ç–æ–≤–∞—Ä
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                <div class="card p-6">
                    <div class="flex flex-col sm:flex-row gap-4">
                        <button type="submit" class="btn-primary flex-1" id="submit-btn">
                            <i class="icon-plus mr-2"></i>
                            –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                        </button>
                        
                        <button type="button" class="btn-secondary" id="save-draft-btn">
                            <i class="icon-save mr-2"></i>
                            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
                        </button>
                        
                        <a href="/my-products" class="btn-outline flex-1 text-center">
                            <i class="icon-arrow-left mr-2"></i>
                            –û—Ç–º–µ–Ω–∞
                        </a>
                    </div>
                    
                    <div class="mt-4 text-xs text-muted-foreground text-center">
                        –¢–æ–≤–∞—Ä –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('create-product-form');
    const imageDropZone = document.getElementById('image-drop-zone');
    const imagesInput = document.getElementById('images-input');
    const imagesPreview = document.getElementById('images-preview');
    const specificationsContainer = document.getElementById('specifications-container');
    const addSpecButton = document.getElementById('add-specification');
    
    let selectedImages = [];
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    imageDropZone.addEventListener('click', () => imagesInput.click());
    
    imageDropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        imageDropZone.classList.add('border-primary');
    });
    
    imageDropZone.addEventListener('dragleave', () => {
        imageDropZone.classList.remove('border-primary');
    });
    
    imageDropZone.addEventListener('drop', (e) => {
        e.preventDefault();
        imageDropZone.classList.remove('border-primary');
        handleFiles(e.dataTransfer.files);
    });
    
    imagesInput.addEventListener('change', (e) => {
        handleFiles(e.target.files);
    });
    
    function handleFiles(files) {
        const maxFiles = 5;
        const maxSize = 5 * 1024 * 1024; // 5MB
        
        if (selectedImages.length + files.length > maxFiles) {
            App.notification.show(`–ú–∞–∫—Å–∏–º—É–º ${maxFiles} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`, 'error');
            return;
        }
        
        Array.from(files).forEach(file => {
            if (!file.type.startsWith('image/')) {
                App.notification.show('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
                return;
            }
            
            if (file.size > maxSize) {
                App.notification.show('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB', 'error');
                return;
            }
            
            selectedImages.push(file);
            displayImagePreview(file);
        });
    }
    
    function displayImagePreview(file) {
        const reader = new FileReader();
        reader.onload = (e) => {
            const imageDiv = document.createElement('div');
            imageDiv.className = 'relative group';
            
            imageDiv.innerHTML = `
                <img 
                    src="${e.target.result}" 
                    class="w-full h-24 object-cover rounded-lg"
                    alt="Preview"
                >
                <button 
                    type="button" 
                    class="absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600 opacity-0 group-hover:opacity-100 transition-opacity remove-image"
                    data-index="${selectedImages.length - 1}"
                >
                    √ó
                </button>
            `;
            
            imagesPreview.appendChild(imageDiv);
            imagesPreview.classList.remove('hidden');
        };
        reader.readAsDataURL(file);
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    imagesPreview.addEventListener('click', (e) => {
        if (e.target.classList.contains('remove-image')) {
            const index = parseInt(e.target.dataset.index);
            selectedImages.splice(index, 1);
            e.target.closest('.relative').remove();
            
            if (selectedImages.length === 0) {
                imagesPreview.classList.add('hidden');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
            document.querySelectorAll('.remove-image').forEach((btn, idx) => {
                btn.dataset.index = idx;
            });
        }
    });
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    addSpecButton.addEventListener('click', () => {
        const specRow = document.createElement('div');
        specRow.className = 'specification-row flex gap-4 mb-4';
        specRow.innerHTML = `
            <input 
                type="text" 
                name="spec_keys[]" 
                class="input-field flex-1" 
                placeholder="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞"
            >
            <input 
                type="text" 
                name="spec_values[]" 
                class="input-field flex-1" 
                placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ"
            >
            <button type="button" class="btn-outline remove-spec">
                <i class="icon-trash"></i>
            </button>
        `;
        
        specificationsContainer.appendChild(specRow);
        updateRemoveButtons();
    });
    
    // –£–¥–∞–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    specificationsContainer.addEventListener('click', (e) => {
        if (e.target.closest('.remove-spec')) {
            e.target.closest('.specification-row').remove();
            updateRemoveButtons();
        }
    });
    
    function updateRemoveButtons() {
        const rows = document.querySelectorAll('.specification-row');
        rows.forEach((row, index) => {
            const removeBtn = row.querySelector('.remove-spec');
            if (index === 0 && rows.length === 1) {
                removeBtn.classList.add('hidden');
            } else {
                removeBtn.classList.remove('hidden');
            }
        });
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        selectedImages.forEach(file => {
            formData.append('images[]', file);
        });
        
        const submitBtn = document.getElementById('submit-btn');
        const originalText = submitBtn.innerHTML;
        
        try {
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="icon-loader mr-2 animate-spin"></i>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...';
            
            const response = await fetch('/products/create', {
                method: 'POST',
                body: formData
            });
            
            const data = await response.json();
            
            if (data.success) {
                App.notification.show(data.message, 'success');
                if (data.redirect) {
                    setTimeout(() => {
                        window.location.href = data.redirect;
                    }, 1500);
                }
            } else {
                if (data.errors) {
                    displayErrors(data.errors);
                } else {
                    App.notification.show(data.message, 'error');
                }
            }
            
        } catch (error) {
            console.error('Error creating product:', error);
            App.notification.show('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞', 'error');
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalText;
        }
    });
    
    function displayErrors(errors) {
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        document.querySelectorAll('.error-message').forEach(el => {
            el.textContent = '';
            el.classList.add('hidden');
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –æ—à–∏–±–∫–∏
        Object.entries(errors).forEach(([field, message]) => {
            const errorEl = document.querySelector(`[data-field="${field}"]`);
            if (errorEl) {
                errorEl.textContent = message;
                errorEl.classList.remove('hidden');
            }
        });
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ
        const firstError = document.querySelector('.error-message:not(.hidden)');
        if (firstError) {
            firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    }
    
    // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (–º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ)
    document.getElementById('save-draft-btn').addEventListener('click', () => {
        App.notification.show('–§—É–Ω–∫—Ü–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ', 'info');
    });
});
</script>

<style>
.error-message {
    @apply text-red-500 text-xs mt-1 hidden;
}

.error-message:not(.hidden) {
    @apply block;
}

.checkbox {
    @apply w-4 h-4 text-primary border-border rounded focus:ring-primary;
}

.specification-row .remove-spec {
    @apply w-10 h-10 flex items-center justify-center;
}

.input-field:focus {
    @apply ring-2 ring-primary border-primary;
}

#image-drop-zone.border-primary {
    @apply border-primary bg-primary/5;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}
</style>

<?php
$content = ob_get_clean();
require_once __DIR__ . '/../layouts/main.php';
?>