<?php
// AJAX обработчик для 8 этапа установки
// Этот файл отвечает ТОЛЬКО JSON без HTML

// Встановлюємо режим дебагу для установки
if (!defined('DEBUG_MODE')) {
    define('DEBUG_MODE', false);
}

// Функція для розбору SQL з підтримкою DELIMITER
function parseSqlWithDelimiter($sql) {
    $queries = [];
    $currentQuery = '';
    $delimiter = ';';
    
    // Видаляємо коментарі та розбиваємо на рядки
    $lines = explode("\n", $sql);
    
    foreach ($lines as $line) {
        $line = trim($line);
        
        // Пропускаємо порожні рядки та коментарі
        if (empty($line) || substr($line, 0, 2) == '--' || substr($line, 0, 2) == '/*') {
            continue;
        }
        
        // Перевіряємо на зміну delimiter
        if (preg_match('/^DELIMITER\s+(.+)$/i', $line, $matches)) {
            $delimiter = trim($matches[1]);
            continue;
        }
        
        // Додаємо рядок до поточного запиту
        $currentQuery .= $line . "\n";
        
        // Перевіряємо чи закінчується запит delimiter'ом
        if (substr(rtrim($line), -strlen($delimiter)) === $delimiter) {
            // Видаляємо delimiter з кінця
            $currentQuery = substr(trim($currentQuery), 0, -strlen($delimiter));
            
            if (!empty(trim($currentQuery))) {
                $queries[] = trim($currentQuery);
            }
            
            $currentQuery = '';
        }
    }
    
    // Додаємо останній запит якщо він є
    if (!empty(trim($currentQuery))) {
        $queries[] = trim($currentQuery);
    }
    
    return $queries;
}

// Очищаємо будь-який попередній вивід
while (ob_get_level()) {
    ob_end_clean();
}

// Встановлюємо правильні заголовки JSON
header('Content-Type: application/json; charset=utf-8');
header('Cache-Control: no-cache, must-revalidate');
header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');

// Відключаємо вивід помилок в JSON
ini_set('display_errors', 0);

session_start();

// Обробка AJAX POST запиту для фактичної установки
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'install') {
    try {
        // Перевіряємо чи є дані установки в сесії
        if (!isset($_SESSION['install_data'])) {
            throw new Exception('Дані установки не знайдені в сесії. Почніть установку заново.');
        }
        
        // Отримуємо дані з сесії
        $dbConfig = $_SESSION['install_data']['db_config'] ?? [];
        $adminConfig = $_SESSION['install_data']['admin'] ?? [];
        $siteConfig = $_SESSION['install_data']['site'] ?? [];
        $additionalConfig = $_SESSION['install_data']['additional'] ?? [];
        $themeConfig = $_SESSION['install_data']['theme'] ?? [];
        
        // Дебаг: логуємо отримані дані
        error_log("Install debug - Site config: " . print_r($siteConfig, true));
        error_log("Install debug - Admin config: " . print_r($adminConfig, true));
        error_log("Install debug - Additional config: " . print_r($additionalConfig, true));
        
        // Валідація обов'язкових полів
        if (empty($dbConfig['host']) || empty($dbConfig['user']) || empty($dbConfig['name'])) {
            throw new Exception('Неповні дані конфігурації бази даних');
        }
        
        if (empty($adminConfig['admin_login']) || empty($adminConfig['admin_email']) || empty($adminConfig['admin_password'])) {
            throw new Exception('Неповні дані адміністратора');
        }
        
        if (empty($siteConfig['site_name']) || empty($siteConfig['site_url'])) {
            throw new Exception('Неповні дані конфігурації сайту');
        }
        
        // 1. Створення необхідних директорій
        $directories = [
            '../uploads',
            '../uploads/ads',
            '../uploads/users',
            '../uploads/temp',
            '../cache',
            '../logs'
        ];
        
        foreach ($directories as $dir) {
            if (!file_exists($dir)) {
                if (!mkdir($dir, 0755, true)) {
                    throw new Exception("Не вдалося створити директорію: $dir");
                }
            }
        }
        
        // 2. Створення конфігураційного файлу
        $secretKey = bin2hex(random_bytes(32));
        $jwtSecret = bin2hex(random_bytes(32));
        
        $configContent = "<?php
// AdBoard Pro Configuration - Generated by installer

// Database Configuration  
define('DB_HOST', '" . addslashes($dbConfig['host']) . "');
define('DB_USER', '" . addslashes($dbConfig['user']) . "');
define('DB_PASS', '" . addslashes($dbConfig['pass'] ?? '') . "');
define('DB_NAME', '" . addslashes($dbConfig['name']) . "');

// Site Configuration
define('SITE_URL', '" . rtrim(addslashes($siteConfig['site_url']), '/') . "');
define('SITE_NAME', '" . addslashes($siteConfig['site_name']) . "');
define('SITE_EMAIL', '" . addslashes($siteConfig['contact_email'] ?? '') . "');
define('SITE_DESCRIPTION', '" . addslashes($siteConfig['site_description'] ?? 'Сучасна дошка оголошень') . "');

// Security
define('SECRET_KEY', '$secretKey');
define('JWT_SECRET', '$jwtSecret');
define('SESSION_NAME', 'adboard_session');

// Environment
define('DEBUG_MODE', false);
define('MAINTENANCE_MODE', false);

// Upload settings
define('UPLOAD_PATH', 'uploads/');
define('MAX_FILE_SIZE', 10485760); // 10MB
define('ALLOWED_EXTENSIONS', 'jpg,jpeg,png,gif,webp');

// Pagination
define('ITEMS_PER_PAGE', 12);

// Email settings (can be configured later)
define('SMTP_HOST', '');
define('SMTP_PORT', 587);
define('SMTP_USER', '');
define('SMTP_PASS', '');
define('SMTP_SECURE', 'tls');

// Session settings
ini_set('session.cookie_httponly', 1);
ini_set('session.use_only_cookies', 1);
ini_set('session.cookie_secure', 0); // Set to 1 for HTTPS

// Auto-loading
spl_autoload_register(function (\$class) {
    \$file = __DIR__ . '/classes/' . \$class . '.php';
    if (file_exists(\$file)) {
        require_once \$file;
    }
});

// Global database variable
\$db = null;

// Database connection
try {
    \$db = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);
    \$db->set_charset('utf8mb4');
    
    if (\$db->connect_error) {
        if (defined('DEBUG_MODE') && DEBUG_MODE) {
            error_log('Database connection error: ' . \$db->connect_error);
            die('Database connection error: ' . \$db->connect_error);
        } else {
            error_log('Database connection error: ' . \$db->connect_error);
            die('Database connection error');
        }
    }
} catch (Exception \$e) {
    if (defined('DEBUG_MODE') && DEBUG_MODE) {
        error_log('Database error: ' . \$e->getMessage());
        die('Database error: ' . \$e->getMessage());
    } else {
        error_log('Database error: ' . \$e->getMessage());
        die('Database error');
    }
}

// Start session
if (session_status() == PHP_SESSION_NONE) {
    session_name(SESSION_NAME);
    session_start();
}
?>";
        
        if (!file_put_contents('../core/config.php', $configContent)) {
            throw new Exception('Не вдалося створити файл конфігурації');
        }
        
        // 3. Підключення до існуючої БД
        $mysqli = new mysqli($dbConfig['host'], $dbConfig['user'], $dbConfig['pass'] ?? '', $dbConfig['name']);
        
        if ($mysqli->connect_error) {
            throw new Exception('Помилка підключення до БД: ' . $mysqli->connect_error);
        }
        
        // Встановлюємо кодування
        $mysqli->set_charset('utf8mb4');
        
        // 4. Імпорт структури БД
        $sqlFiles = [
            'database.sql',
            'initial_data.sql'
        ];
        
                        foreach ($sqlFiles as $sqlFile) {
            $fullPath = __DIR__ . '/' . $sqlFile;
            if (file_exists($fullPath)) {
                error_log("Processing SQL file: $sqlFile");
                $sql = file_get_contents($fullPath);
                if ($sql) {
                    // Функція для розбору SQL з підтримкою DELIMITER
                    $queries = parseSqlWithDelimiter($sql);
                    $executed = 0;
                    foreach ($queries as $query) {
                        $query = trim($query);
                        if (!empty($query) && !preg_match('/^--|^\/\*/', $query)) {
                            if (!$mysqli->query($query)) {
                                // Ігноруємо помилки створення БД та таблиць (може вже існувати)
                                $error = strtolower($mysqli->error);
                                $ignorable_errors = [
                                    'database exists',
                                    'table exists', 
                                    'already exists',
                                    'table \'',
                                    'duplicate column',
                                    'multiple primary key',
                                    'duplicate entry',
                                    'trigger already exists',
                                    'event already exists'
                                ];
                                
                                $should_ignore = false;
                                foreach ($ignorable_errors as $ignore_pattern) {
                                    if (strpos($error, $ignore_pattern) !== false) {
                                        $should_ignore = true;
                                        error_log("Ignoring SQL error in $sqlFile: " . $mysqli->error);
                                        break;
                                    }
                                }
                                
                                if (!$should_ignore) {
                                    error_log("Fatal SQL error in $sqlFile: " . $mysqli->error);
                                    error_log("Query that failed: " . substr($query, 0, 200) . "...");
                                    throw new Exception("Помилка в {$sqlFile}: " . $mysqli->error);
                                }
                            } else {
                                $executed++;
                            }
                        }
                    }
                    error_log("Executed $executed queries from $sqlFile");
                }
            } else {
                error_log("SQL file not found: $fullPath");
            }
        }
        
        // 5. Створення адміністратора
        $adminPassword = password_hash($adminConfig['admin_password'], PASSWORD_DEFAULT);
        
        // Перевіряємо чи існує таблиця users
        $result = $mysqli->query("SHOW TABLES LIKE 'users'");
        if ($result->num_rows == 0) {
            throw new Exception('Таблиця users не була створена');
        }
        
        // Видаляємо існуючого адміна якщо є
        $mysqli->query("DELETE FROM users WHERE role = 'admin' OR user_type = 'admin'");
        
        $stmt = $mysqli->prepare("
            INSERT INTO users (username, first_name, last_name, email, password, role, user_type, group_id, status, email_verified, created_at) 
            VALUES (?, ?, ?, ?, ?, 'admin', 'admin', 1, 'active', 1, NOW())
        ");
        
        if (!$stmt) {
            throw new Exception('Помилка підготовки запиту користувача: ' . $mysqli->error);
        }
        
        $firstName = $adminConfig['admin_first_name'] ?? 'Admin';
        $lastName = $adminConfig['admin_last_name'] ?? 'User';
        $username = $adminConfig['admin_login'];
        
        $stmt->bind_param("sssss", 
            $adminConfig['admin_login'], 
            $firstName,
            $lastName,
            $adminConfig['admin_email'], 
            $adminPassword
        );
        
        if (!$stmt->execute()) {
            throw new Exception('Помилка створення адміністратора: ' . $stmt->error);
        }
        
        $stmt->close();
        
        // 6. Додаємо початкові налаштування сайту (БЕЗ даних адміністратора)
        $settings = [
            // Основні налаштування сайту з форми
            ['site_title', $siteConfig['site_name']],
            ['site_description', $siteConfig['site_description'] ?? 'Сучасна дошка оголошень'],
            ['site_keywords', $siteConfig['site_keywords'] ?? 'реклама, оголошення, дошка оголошень'],
            ['contact_email', $siteConfig['contact_email'] ?? ''],
            ['site_url', rtrim($siteConfig['site_url'], '/')],
            
            // Додаткові налаштування з форми
            ['timezone', $additionalConfig['timezone'] ?? 'Europe/Kiev'],
            ['language', $additionalConfig['default_language'] ?? 'uk'],
            ['available_languages', '["uk","ru","en"]'],
            
            // Налаштування теми з форми
            ['current_theme', $themeConfig['default_theme'] ?? 'light'],
            ['current_gradient', $themeConfig['default_gradient'] ?? 'gradient-1'],
            ['enable_animations', $additionalConfig['enable_animations'] ?? '0'],
            ['enable_particles', $additionalConfig['enable_particles'] ?? '0'],
            ['smooth_scroll', $additionalConfig['smooth_scroll'] ?? '0'],
            ['enable_tooltips', $additionalConfig['enable_tooltips'] ?? '0'],
            
            // Системні налаштування (дефолтні значення)
            ['max_ad_duration_days', '30'],
            ['ads_per_page', '12'],
            ['auto_approve_ads', '0'],
            ['maintenance_mode', '0']
        ];
        
        // Перевіряємо чи існує таблиця site_settings
        $result = $mysqli->query("SHOW TABLES LIKE 'site_settings'");
        if ($result->num_rows > 0) {
            $settingsStmt = $mysqli->prepare("
                INSERT INTO site_settings (setting_key, value) 
                VALUES (?, ?) 
                ON DUPLICATE KEY UPDATE value = VALUES(value)
            ");
            
            if ($settingsStmt) {
                foreach ($settings as $setting) {
                    $settingsStmt->bind_param("ss", $setting[0], $setting[1]);
                    $settingsStmt->execute();
                }
                $settingsStmt->close();
            }
        }
        
        // 7. Створення файлу .installed
        if (!file_put_contents('../.installed', date('Y-m-d H:i:s'))) {
            throw new Exception('Не вдалося створити файл .installed');
        }
        
        $mysqli->close();
        
        // Зберігаємо дані для показу в step_9, але позначаємо інсталяцію як завершену
        $_SESSION['install_data']['installation_completed'] = true;
        
        // Повертаємо успішний результат
        $response = [
            'success' => true,
            'message' => 'Установка завершена успішно',
            'redirect_url' => '?step=9'
        ];
        
        echo json_encode($response, JSON_UNESCAPED_UNICODE);
        exit();
        
    } catch (Exception $e) {
        // Логуємо помилку
        error_log("Installation error: " . $e->getMessage());
        
        $response = [
            'success' => false,
            'error' => $e->getMessage(),
            'trace' => (defined('DEBUG_MODE') && DEBUG_MODE) ? $e->getTraceAsString() : null
        ];
        
        echo json_encode($response, JSON_UNESCAPED_UNICODE);
        exit();
    } catch (Error $e) {
        // Логуємо фатальну помилку
        error_log("Installation fatal error: " . $e->getMessage());
        
        $response = [
            'success' => false,
            'error' => 'Критична помилка установки: ' . $e->getMessage()
        ];
        
        echo json_encode($response, JSON_UNESCAPED_UNICODE);
        exit();
    }
} else {
    // Неправильний запит
    $response = [
        'success' => false,
        'error' => 'Неправильний AJAX запит'
    ];
    
    echo json_encode($response, JSON_UNESCAPED_UNICODE);
    exit();
}
?>