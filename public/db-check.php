<?php
// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö GameMarket Pro

require_once __DIR__ . '/../app/bootstrap.php';

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ë–î - GameMarket Pro</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background: #f5f5f5;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .status {
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .warning { background: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
        .info { background: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        th, td {
            padding: 8px 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background: #f8f9fa;
            font-weight: bold;
        }
        .btn {
            display: inline-block;
            padding: 10px 20px;
            background: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            margin: 5px;
        }
        .btn:hover {
            background: #0056b3;
        }
        .btn-danger {
            background: #dc3545;
        }
        .btn-danger:hover {
            background: #c82333;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö GameMarket Pro</h1>
        
        <?php
        $dbConnected = false;
        $dbError = '';
        $tables = [];
        $tableStatus = [];
        
        try {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
            $db = $GLOBALS['db'] ?? null;
            if ($db) {
                $dbConnected = true;
                echo '<div class="status success">‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ</div>';
                
                // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ë–î
                $dbInfo = $db->query("SELECT DATABASE() as db_name")->fetch();
                echo '<div class="status info">üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: <strong>' . htmlspecialchars($dbInfo['db_name']) . '</strong></div>';
                
                // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
                $stmt = $db->query("SHOW TABLES");
                $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
                
                if (empty($tables)) {
                    echo '<div class="status warning">‚ö†Ô∏è –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü! –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ö–µ–º—ã.</div>';
                } else {
                    echo '<div class="status success">‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: ' . count($tables) . '</div>';
                }
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
                $requiredTables = [
                    'users', 'products', 'categories', 'purchases', 'reviews', 
                    'favorites', 'messages', 'disputes', 'notifications', 
                    'transactions', 'settings'
                ];
                
                foreach ($requiredTables as $table) {
                    if (in_array($table, $tables)) {
                        try {
                            $count = $db->query("SELECT COUNT(*) FROM `$table`")->fetchColumn();
                            $tableStatus[$table] = [
                                'exists' => true,
                                'count' => $count,
                                'error' => null
                            ];
                        } catch (Exception $e) {
                            $tableStatus[$table] = [
                                'exists' => true,
                                'count' => 0,
                                'error' => $e->getMessage()
                            ];
                        }
                    } else {
                        $tableStatus[$table] = [
                            'exists' => false,
                            'count' => 0,
                            'error' => '–¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
                        ];
                    }
                }
                
            } else {
                throw new Exception('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
            }
            
        } catch (Exception $e) {
            $dbError = $e->getMessage();
            echo '<div class="status error">‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: ' . htmlspecialchars($dbError) . '</div>';
        }
        ?>
        
        <?php if ($dbConnected): ?>
            <h2>üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü</h2>
            <table>
                <thead>
                    <tr>
                        <th>–¢–∞–±–ª–∏—Ü–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–ó–∞–ø–∏—Å–µ–π</th>
                        <th>–û—à–∏–±–∫–∞</th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($tableStatus as $table => $status): ?>
                        <tr>
                            <td><code><?= htmlspecialchars($table) ?></code></td>
                            <td>
                                <?php if ($status['exists']): ?>
                                    <span style="color: green;">‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç</span>
                                <?php else: ?>
                                    <span style="color: red;">‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</span>
                                <?php endif; ?>
                            </td>
                            <td><?= number_format($status['count']) ?></td>
                            <td>
                                <?php if ($status['error']): ?>
                                    <span style="color: red;"><?= htmlspecialchars($status['error']) ?></span>
                                <?php else: ?>
                                    <span style="color: green;">OK</span>
                                <?php endif; ?>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
            
            <?php
            $missingTables = array_filter($tableStatus, function($status) {
                return !$status['exists'];
            });
            
            if (!empty($missingTables)):
            ?>
                <div class="status warning">
                    ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–∞–±–ª–∏—Ü—ã: <?= implode(', ', array_keys($missingTables)) ?>
                </div>
            <?php endif; ?>
            
            <h2>üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è</h2>
            <?php if (!empty($missingTables) || empty($tables)): ?>
                <a href="/install.php" class="btn">üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É</a>
                <a href="/install.php?step=install&force=1" class="btn btn-danger">‚ö†Ô∏è –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ö–µ–º—É –ë–î</a>
            <?php else: ?>
                <div class="status success">‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ –º–µ—Å—Ç–µ! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.</div>
                <a href="/" class="btn">üè† –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
            <?php endif; ?>
            
        <?php else: ?>
            <h2>‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º</h2>
            <div class="status error">
                <strong>–û—à–∏–±–∫–∞:</strong> <?= htmlspecialchars($dbError) ?>
            </div>
            <p>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</p>
            <ul>
                <li>–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ <code>app/config/database.php</code></li>
                <li>MySQL —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω</li>
                <li>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞</li>
                <li>–ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
            </ul>
            <a href="/install.php" class="btn">üîß –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∞—Å—Ç–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏</a>
        <?php endif; ?>
        
        <hr style="margin: 30px 0;">
        
        <h2>‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h2>
        <?php
        $dbConfig = require __DIR__ . '/../app/config/database.php';
        $mysqlConfig = $dbConfig['connections']['mysql'];
        ?>
        <table>
            <tr>
                <td><strong>–•–æ—Å—Ç:</strong></td>
                <td><?= htmlspecialchars($mysqlConfig['host']) ?></td>
            </tr>
            <tr>
                <td><strong>–ü–æ—Ä—Ç:</strong></td>
                <td><?= htmlspecialchars($mysqlConfig['port']) ?></td>
            </tr>
            <tr>
                <td><strong>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:</strong></td>
                <td><?= htmlspecialchars($mysqlConfig['database']) ?></td>
            </tr>
            <tr>
                <td><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong></td>
                <td><?= htmlspecialchars($mysqlConfig['username']) ?></td>
            </tr>
            <tr>
                <td><strong>–ö–æ–¥–∏—Ä–æ–≤–∫–∞:</strong></td>
                <td><?= htmlspecialchars($mysqlConfig['charset']) ?></td>
            </tr>
        </table>
        
        <p><small>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª <code>app/config/database.php</code></small></p>
    </div>
</body>
</html>